import Card from './Card.js';
import { PlayerAction } from './Player.js';

type LogEntryType = "PlayerAction" | "GameStateChange" | "PotUpdate" | "RoundEnd";
interface PlayerActionRecord {
    playerId: string;
    action: PlayerAction;
    amount?: number;
}
interface GameStateChange {
    newState: "pre-flop" | "flop" | "turn" | "river" | "showdown" | "ended";
}
interface PotUpdate {
    potAmount: number;
}
interface RoundEnd {
    winnerIds: string[];
    finalPot: number;
}
interface GameLogEntry {
    type: LogEntryType;
    timestamp: Date;
    details: PlayerActionRecord | GameStateChange | PotUpdate | RoundEnd;
    players: PlayerState[];
    communityCards: Card[];
}
interface PlayerState {
    playerId: string;
    chips: number;
    cards: Card[];
    isFolded: boolean;
    betAmount: number;
}
interface GameHistory {
    tableId: string;
    hands: GameLogEntry[];
}

export type { GameHistory, GameLogEntry, GameStateChange, LogEntryType, PlayerActionRecord, PlayerState, PotUpdate, RoundEnd };
