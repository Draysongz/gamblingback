"use strict";
var __create = Object.create;
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getProtoOf = Object.getPrototypeOf;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __esm = (fn, res) => function __init() {
  return fn && (res = (0, fn[__getOwnPropNames(fn)[0]])(fn = 0)), res;
};
var __commonJS = (cb, mod) => function __require() {
  return mod || (0, cb[__getOwnPropNames(cb)[0]])((mod = { exports: {} }).exports, mod), mod.exports;
};
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(
  // If the importer is in node compatibility mode or this is not an ESM
  // file that has been converted to a CommonJS file using a Babel-
  // compatible transform (i.e. "__esModule" has not been set), then set
  // "default" to the CommonJS "module.exports" for node compatibility.
  isNodeMode || !mod || !mod.__esModule ? __defProp(target, "default", { value: mod, enumerable: true }) : target,
  mod
));
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// node_modules/tslib/tslib.es6.js
var tslib_es6_exports = {};
__export(tslib_es6_exports, {
  __assign: () => __assign,
  __asyncDelegator: () => __asyncDelegator,
  __asyncGenerator: () => __asyncGenerator,
  __asyncValues: () => __asyncValues,
  __await: () => __await,
  __awaiter: () => __awaiter,
  __classPrivateFieldGet: () => __classPrivateFieldGet,
  __classPrivateFieldSet: () => __classPrivateFieldSet,
  __createBinding: () => __createBinding,
  __decorate: () => __decorate,
  __exportStar: () => __exportStar,
  __extends: () => __extends,
  __generator: () => __generator,
  __importDefault: () => __importDefault,
  __importStar: () => __importStar,
  __makeTemplateObject: () => __makeTemplateObject,
  __metadata: () => __metadata,
  __param: () => __param,
  __read: () => __read,
  __rest: () => __rest,
  __spread: () => __spread,
  __spreadArrays: () => __spreadArrays,
  __values: () => __values
});
function __extends(d, b) {
  extendStatics(d, b);
  function __() {
    this.constructor = d;
  }
  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
}
function __rest(s, e) {
  var t = {};
  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
    t[p] = s[p];
  if (s != null && typeof Object.getOwnPropertySymbols === "function")
    for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
      if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
        t[p[i]] = s[p[i]];
    }
  return t;
}
function __decorate(decorators, target, key, desc) {
  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
  else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
  return c > 3 && r && Object.defineProperty(target, key, r), r;
}
function __param(paramIndex, decorator) {
  return function(target, key) {
    decorator(target, key, paramIndex);
  };
}
function __metadata(metadataKey, metadataValue) {
  if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(metadataKey, metadataValue);
}
function __awaiter(thisArg, _arguments, P, generator) {
  function adopt(value) {
    return value instanceof P ? value : new P(function(resolve) {
      resolve(value);
    });
  }
  return new (P || (P = Promise))(function(resolve, reject) {
    function fulfilled(value) {
      try {
        step(generator.next(value));
      } catch (e) {
        reject(e);
      }
    }
    function rejected(value) {
      try {
        step(generator["throw"](value));
      } catch (e) {
        reject(e);
      }
    }
    function step(result) {
      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
    }
    step((generator = generator.apply(thisArg, _arguments || [])).next());
  });
}
function __generator(thisArg, body) {
  var _ = { label: 0, sent: function() {
    if (t[0] & 1) throw t[1];
    return t[1];
  }, trys: [], ops: [] }, f, y, t, g;
  return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() {
    return this;
  }), g;
  function verb(n) {
    return function(v) {
      return step([n, v]);
    };
  }
  function step(op) {
    if (f) throw new TypeError("Generator is already executing.");
    while (_) try {
      if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
      if (y = 0, t) op = [op[0] & 2, t.value];
      switch (op[0]) {
        case 0:
        case 1:
          t = op;
          break;
        case 4:
          _.label++;
          return { value: op[1], done: false };
        case 5:
          _.label++;
          y = op[1];
          op = [0];
          continue;
        case 7:
          op = _.ops.pop();
          _.trys.pop();
          continue;
        default:
          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
            _ = 0;
            continue;
          }
          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {
            _.label = op[1];
            break;
          }
          if (op[0] === 6 && _.label < t[1]) {
            _.label = t[1];
            t = op;
            break;
          }
          if (t && _.label < t[2]) {
            _.label = t[2];
            _.ops.push(op);
            break;
          }
          if (t[2]) _.ops.pop();
          _.trys.pop();
          continue;
      }
      op = body.call(thisArg, _);
    } catch (e) {
      op = [6, e];
      y = 0;
    } finally {
      f = t = 0;
    }
    if (op[0] & 5) throw op[1];
    return { value: op[0] ? op[1] : void 0, done: true };
  }
}
function __createBinding(o, m, k, k2) {
  if (k2 === void 0) k2 = k;
  o[k2] = m[k];
}
function __exportStar(m, exports2) {
  for (var p in m) if (p !== "default" && !exports2.hasOwnProperty(p)) exports2[p] = m[p];
}
function __values(o) {
  var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
  if (m) return m.call(o);
  if (o && typeof o.length === "number") return {
    next: function() {
      if (o && i >= o.length) o = void 0;
      return { value: o && o[i++], done: !o };
    }
  };
  throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
}
function __read(o, n) {
  var m = typeof Symbol === "function" && o[Symbol.iterator];
  if (!m) return o;
  var i = m.call(o), r, ar = [], e;
  try {
    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
  } catch (error) {
    e = { error };
  } finally {
    try {
      if (r && !r.done && (m = i["return"])) m.call(i);
    } finally {
      if (e) throw e.error;
    }
  }
  return ar;
}
function __spread() {
  for (var ar = [], i = 0; i < arguments.length; i++)
    ar = ar.concat(__read(arguments[i]));
  return ar;
}
function __spreadArrays() {
  for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;
  for (var r = Array(s), k = 0, i = 0; i < il; i++)
    for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
      r[k] = a[j];
  return r;
}
function __await(v) {
  return this instanceof __await ? (this.v = v, this) : new __await(v);
}
function __asyncGenerator(thisArg, _arguments, generator) {
  if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
  var g = generator.apply(thisArg, _arguments || []), i, q = [];
  return i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function() {
    return this;
  }, i;
  function verb(n) {
    if (g[n]) i[n] = function(v) {
      return new Promise(function(a, b) {
        q.push([n, v, a, b]) > 1 || resume(n, v);
      });
    };
  }
  function resume(n, v) {
    try {
      step(g[n](v));
    } catch (e) {
      settle(q[0][3], e);
    }
  }
  function step(r) {
    r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);
  }
  function fulfill(value) {
    resume("next", value);
  }
  function reject(value) {
    resume("throw", value);
  }
  function settle(f, v) {
    if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]);
  }
}
function __asyncDelegator(o) {
  var i, p;
  return i = {}, verb("next"), verb("throw", function(e) {
    throw e;
  }), verb("return"), i[Symbol.iterator] = function() {
    return this;
  }, i;
  function verb(n, f) {
    i[n] = o[n] ? function(v) {
      return (p = !p) ? { value: __await(o[n](v)), done: n === "return" } : f ? f(v) : v;
    } : f;
  }
}
function __asyncValues(o) {
  if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
  var m = o[Symbol.asyncIterator], i;
  return m ? m.call(o) : (o = typeof __values === "function" ? __values(o) : o[Symbol.iterator](), i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function() {
    return this;
  }, i);
  function verb(n) {
    i[n] = o[n] && function(v) {
      return new Promise(function(resolve, reject) {
        v = o[n](v), settle(resolve, reject, v.done, v.value);
      });
    };
  }
  function settle(resolve, reject, d, v) {
    Promise.resolve(v).then(function(v2) {
      resolve({ value: v2, done: d });
    }, reject);
  }
}
function __makeTemplateObject(cooked, raw) {
  if (Object.defineProperty) {
    Object.defineProperty(cooked, "raw", { value: raw });
  } else {
    cooked.raw = raw;
  }
  return cooked;
}
function __importStar(mod) {
  if (mod && mod.__esModule) return mod;
  var result = {};
  if (mod != null) {
    for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
  }
  result.default = mod;
  return result;
}
function __importDefault(mod) {
  return mod && mod.__esModule ? mod : { default: mod };
}
function __classPrivateFieldGet(receiver, privateMap) {
  if (!privateMap.has(receiver)) {
    throw new TypeError("attempted to get private field on non-instance");
  }
  return privateMap.get(receiver);
}
function __classPrivateFieldSet(receiver, privateMap, value) {
  if (!privateMap.has(receiver)) {
    throw new TypeError("attempted to set private field on non-instance");
  }
  privateMap.set(receiver, value);
  return value;
}
var extendStatics, __assign;
var init_tslib_es6 = __esm({
  "node_modules/tslib/tslib.es6.js"() {
    "use strict";
    extendStatics = function(d, b) {
      extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b2) {
        d2.__proto__ = b2;
      } || function(d2, b2) {
        for (var p in b2) if (b2.hasOwnProperty(p)) d2[p] = b2[p];
      };
      return extendStatics(d, b);
    };
    __assign = function() {
      __assign = Object.assign || function __assign2(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
          s = arguments[i];
          for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
        }
        return t;
      };
      return __assign.apply(this, arguments);
    };
  }
});

// node_modules/poker-evaluator-ts/lib/constants/card-ranks.const.js
var require_card_ranks_const = __commonJS({
  "node_modules/poker-evaluator-ts/lib/constants/card-ranks.const.js"(exports2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.CARD_RANKS = [
      "2",
      "3",
      "4",
      "5",
      "6",
      "7",
      "8",
      "9",
      "t",
      "j",
      "q",
      "k",
      "a"
    ];
  }
});

// node_modules/poker-evaluator-ts/lib/constants/deck.const.js
var require_deck_const = __commonJS({
  "node_modules/poker-evaluator-ts/lib/constants/deck.const.js"(exports2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.DECK = {
      "2c": 1,
      "2d": 2,
      "2h": 3,
      "2s": 4,
      "3c": 5,
      "3d": 6,
      "3h": 7,
      "3s": 8,
      "4c": 9,
      "4d": 10,
      "4h": 11,
      "4s": 12,
      "5c": 13,
      "5d": 14,
      "5h": 15,
      "5s": 16,
      "6c": 17,
      "6d": 18,
      "6h": 19,
      "6s": 20,
      "7c": 21,
      "7d": 22,
      "7h": 23,
      "7s": 24,
      "8c": 25,
      "8d": 26,
      "8h": 27,
      "8s": 28,
      "9c": 29,
      "9d": 30,
      "9h": 31,
      "9s": 32,
      "tc": 33,
      "td": 34,
      "th": 35,
      "ts": 36,
      "jc": 37,
      "jd": 38,
      "jh": 39,
      "js": 40,
      "qc": 41,
      "qd": 42,
      "qh": 43,
      "qs": 44,
      "kc": 45,
      "kd": 46,
      "kh": 47,
      "ks": 48,
      "ac": 49,
      "ad": 50,
      "ah": 51,
      "as": 52
    };
  }
});

// node_modules/poker-evaluator-ts/lib/constants/hand-types.const.js
var require_hand_types_const = __commonJS({
  "node_modules/poker-evaluator-ts/lib/constants/hand-types.const.js"(exports2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.HAND_TYPES = [
      "invalid hand",
      "high card",
      "one pair",
      "two pairs",
      "three of a kind",
      "straight",
      "flush",
      "full house",
      "four of a kind",
      "straight flush"
    ];
  }
});

// node_modules/poker-evaluator-ts/lib/constants/index.js
var require_constants = __commonJS({
  "node_modules/poker-evaluator-ts/lib/constants/index.js"(exports2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", { value: true });
    var tslib_1 = (init_tslib_es6(), __toCommonJS(tslib_es6_exports));
    tslib_1.__exportStar(require_card_ranks_const(), exports2);
    tslib_1.__exportStar(require_deck_const(), exports2);
    tslib_1.__exportStar(require_hand_types_const(), exports2);
  }
});

// node_modules/poker-evaluator-ts/lib/three-card-converter.js
var require_three_card_converter = __commonJS({
  "node_modules/poker-evaluator-ts/lib/three-card-converter.js"(exports2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", { value: true });
    var tslib_1 = (init_tslib_es6(), __toCommonJS(tslib_es6_exports));
    var constants_1 = require_constants();
    var ThreeCardConverter = (
      /** @class */
      function() {
        function ThreeCardConverter2() {
        }
        ThreeCardConverter2.fillHand = function(cards) {
          cards = tslib_1.__spreadArrays(cards);
          var cardsUsed = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];
          cards.forEach(function(card) {
            var index = Math.floor((constants_1.DECK[card.toLowerCase()] - 1) / 4);
            cardsUsed[index] = 1;
          });
          var toFill = 2;
          for (var i = 0; i < cardsUsed.length - 1; i++) {
            if (toFill === 0)
              break;
            if (cardsUsed[i] === 0 && !this.makesStraight(cardsUsed, i)) {
              cardsUsed[i] = 2;
              toFill--;
            }
          }
          var suit = ["s", "d"];
          cardsUsed.forEach(function(cardUsedValue, i2) {
            if (cardUsedValue === 2) {
              var card = constants_1.CARD_RANKS[i2] + suit[0];
              suit.splice(0, 1);
              cards.push(card);
            }
          });
          return cards;
        };
        ThreeCardConverter2.makesStraight = function(cardsUsed, rank) {
          var newCards = [cardsUsed[cardsUsed.length - 1]].concat(cardsUsed);
          newCards[rank + 1] = 2;
          return 5 === newCards.reduce(function(prev, next) {
            if (prev === 5) {
              return 5;
            } else {
              return next ? prev + 1 : 0;
            }
          });
        };
        return ThreeCardConverter2;
      }()
    );
    exports2.default = ThreeCardConverter;
  }
});

// node_modules/poker-evaluator-ts/lib/poker-evaluator.js
var require_poker_evaluator = __commonJS({
  "node_modules/poker-evaluator-ts/lib/poker-evaluator.js"(exports2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", { value: true });
    var tslib_1 = (init_tslib_es6(), __toCommonJS(tslib_es6_exports));
    var fs = tslib_1.__importStar(require("fs"));
    var path = tslib_1.__importStar(require("path"));
    var constants_1 = require_constants();
    var three_card_converter_1 = tslib_1.__importDefault(require_three_card_converter());
    var RANKS_DATA = fs.readFileSync(path.join(__dirname, "../data/HandRanks.dat"));
    function evalHand2(cards) {
      if (!RANKS_DATA) {
        throw new Error("HandRanks.dat not loaded.");
      }
      if (cards.length !== 7 && cards.length !== 6 && cards.length !== 5 && cards.length !== 3) {
        throw new Error("Hand must be 3, 5, 6, or 7 cards, but " + cards.length + " cards were provided");
      }
      if (cardsAreValidStrings(cards)) {
        var stringCards = cards;
        if (stringCards.length === 3) {
          stringCards = three_card_converter_1.default.fillHand(stringCards);
        }
        return evaluate(convertCardsToNumbers(stringCards));
      } else if (cardsAreValidNumbers(cards)) {
        if (cards.length === 3) {
          throw new Error('Please supply 3 card hands as string[] of "cards" only.');
        }
        return evaluate(cards);
      } else {
        throw new Error(`
      Please supply input as a valid string[] | number[] of "cards".
      See src/constants/deck.const.ts for the deck's values
    `);
      }
    }
    exports2.evalHand = evalHand2;
    function evalCard(card) {
      return RANKS_DATA.readUInt32LE(card * 4);
    }
    function convertCardsToNumbers(cards) {
      return cards.map(function(card) {
        return constants_1.DECK[card.toLowerCase()];
      });
    }
    function cardsAreValidStrings(cards) {
      return cards.every(function(card) {
        return typeof card === "string" && Object.keys(constants_1.DECK).includes(card.toLowerCase());
      });
    }
    function cardsAreValidNumbers(cards) {
      return cards.every(function(card) {
        return typeof card === "number" && Object.values(constants_1.DECK).includes(card);
      });
    }
    function evaluate(cardValues) {
      var p = 53;
      cardValues.forEach(function(cardValue) {
        return p = evalCard(p + cardValue);
      });
      if (cardValues.length === 5 || cardValues.length === 6) {
        p = evalCard(p);
      }
      return {
        handType: p >> 12,
        handRank: p & 4095,
        value: p,
        handName: constants_1.HAND_TYPES[p >> 12]
      };
    }
  }
});

// src/PlayerTurnTimeOut.ts
var PlayerTurnTimeOut_exports = {};
__export(PlayerTurnTimeOut_exports, {
  default: () => PlayerTurnTimeOut_default
});
module.exports = __toCommonJS(PlayerTurnTimeOut_exports);
var import_timers = require("timers");

// src/Table.ts
var import_poker_evaluator_ts = __toESM(require_poker_evaluator());
var GAME_EVENTS = {
  PLAYER_TURN: "PLAYER_TURN",
  PLAYER_ACTION: "PLATER_ACTION",
  PLAYER_TURN_EXPIRED: "PLAYER_TURN_EXPIRED",
  GAME_STATE_CHANGED: "GAME_STATE_CHANGED",
  GAME_STARTED: "GAME_STARTED",
  GAME_ENDED: "GAME_ENDED",
  PLAYER_JOINED: "PLAYER_JOINED",
  PLAYER_LEFT: "PLAYER_LEFT",
  GAME_ACTION_PERFORMED: "GAME_ACTION_PERFORMED",
  GAME_ACTION_COMPLETED: "GAME_ACTION_COMPLETED",
  GAME_ACTION_CANCELLED: "GAME_ACTION_CANCELLED",
  SHOWDOWN: "SHOWDOWN"
};

// src/PlayerTurnTimeOut.ts
var PlayerTurnTimeout = class {
  constructor(table) {
    this.table = table;
    this.table.events.on(GAME_EVENTS.PLAYER_TURN, this.startTimer.bind(this));
  }
  startTimer(data) {
    if (this.table.gameState == 6 /* Ended */) return;
    console.log(
      `Waiting ${this.table.playerTurnTimeLimit} sec for player ${data.playerId} turn`
    );
    const timeout = 15 * 1e3;
    this.table.playerTurnTimeout = (0, import_timers.setTimeout)(() => {
      this.table.events.emit(GAME_EVENTS.PLAYER_TURN_EXPIRED, data);
    }, timeout);
  }
};
var PlayerTurnTimeOut_default = PlayerTurnTimeout;
/*! Bundled license information:

tslib/tslib.es6.js:
  (*! *****************************************************************************
  Copyright (c) Microsoft Corporation.
  
  Permission to use, copy, modify, and/or distribute this software for any
  purpose with or without fee is hereby granted.
  
  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
  PERFORMANCE OF THIS SOFTWARE.
  ***************************************************************************** *)
*/
